~~~ Running global environment hook
[90m$[0m /nix/store/i42glba5vjzdsyfgicji807k4blchykk-buildkite-agent-hooks/environment
~~~ Preparing build folder
[90m$[0m mkdir -p /var/lib/buildkite-agent/builds/packet-ipxe-2-ci2-3/input-output-hk/cardano-wallet-nightly
[90m$[0m cd /var/lib/buildkite-agent/builds/packet-ipxe-2-ci2-3/input-output-hk/cardano-wallet-nightly
[90m$[0m git remote set-url origin https://github.com/input-output-hk/cardano-wallet.git
[90m$[0m git clean -ffdqx
[90m$[0m git submodule foreach --recursive git clean -ffdqx
[90m$[0m git fetch -v origin 23c314a0bf3849fd52ca443a5127313c646b4904
POST git-upload-pack (960 bytes)
remote: Enumerating objects: 125, done.
remote: Counting objects:   0% (1/125)remote: Counting objects:   1% (2/125)         Counting objects:   2% (3/125)remote:g objects:   3% (4/125)         Countins:   4% (5/125)        remote:g object(7/125)        remote: Countins:   6%        remote: Counting object(9/125) remote: Counting objects:   8% (10/125)         Counting objects:   9% (12/125)        remote:g objects:  10% (13/125)remote: Countins:  11% (14/125)         Counting object(15/125)        remote:g objects:  13%         remote: Countins:  14% (18/125)remote: Counting objec(19/125)         Counting objects:  16% (20/125)        remote:g objects:  17% (22/125)        remote: Countins:  18% (23/125) remote: Counting object(24/125)        Counting objects:  20%         remote:  objects:  21% (27/125)remote: Counting:  22% (28/125)         Counting object29/125)        remote:g objects:  24% (30/125)        remote: Countins:  25% (32/125)        remote: Counting object(33/125)  emote: Counting objects:  27%         rounting objects:  28% (35/125)remote: Cobjects:  29% (37/125)         Counting   30% (38/125)        remote:g objects9/125)        remote: Countins:  32% (40/125)        remote: Counting object(42/125)        remote: Counting objects:  34%    mote: Counting objects:  35% (44/125)reunting objects:  36% (45/125)         Cobjects:  37% (47/125)        remote:g o 38% (48/125)        remote: Countins:/125)        remote: Counting object(50/125)        remote: Counting objects:  41%         remote: Counting objects:  42% (53/ote: Counting objects:  43% (54/125)    nting objects:  44% (55/125)        remjects:  45% (57/125)        remote: Cou46% (58/125)        remote: Counting o125)        remote: Counting objects:  48%         remote: Counting objects:  49% (62/125)remote: Counting objects:  50% (63/1    Counting objects:  51% (64/125)     te:g objects:  52% (65/125)        remotins:  53% (67/125)        remote: Counect(68/125)        remote: Counting ob5%         remote: Counting objects:  56% (70/125)remote: Counting objects:  57% (72/125)         Counting objects:  58% (73/12  remote:g objects:  59% (74/125)      e: Countins:  60% (75/125)        remoting object(77/125)        remote: Countcts:  62%         remote: Counting obj% (79/125)remote: Counting objects:  64% (80/125)         Counting objects:  65% (82/125)        remote:g objects:  66% (83/125 remote: Countins:  67% (84/125)       : Counting object(85/125)        remoteng objects:  69%         remote: Countits:  70% (88/125)remote: Counting obje (89/125)         Counting objects:  72% (90/125)        remote:g objects:  73% (92/125)        remote: Countins:  74% (93/125)remote: Counting object(94/125)         Counting objects:  76%         remote:g objects:  77% (97/125)remote: Countins:  78% (98/125)         Counting objec(99/125)        remote:g objects:  80% (100/125)remote: Counting objec (102/125)        remote: Counting objects:  8225)      e: Counting objects:  83% (104/    remoting objects:  84% (105/125)   mote: Coujects:  85% (107/125)        rounting o 86% (108/125)        remote:  objects09/125)        remote: Countins:  88% (110/125)        remote: Counting objec (112/125)        remote: Counting objects:  9025 remote: Counting objects:  91% (114/    remote: Counting objects:  92% )   mote: Counting objects:  93% (117/125 remote: Counting objects:  94% (118/125)   : Counting objects:  95% (119/125)        reunting objects:  96% (120/125)        rebjects:  97% (122/125)        remote: Co 98% (123/125)        remote: Counting o4/125)        remote: Counting objects:       remote: Counting objects: 100% (12     
remote: Compressing objects:   2% (1/37)remote: Compressing objects:   5% (2/37)         Compressing objects:   8% (3/37)remote:sing objects:  10% (4/37)         Compresects:  13% (5/37)        remote:sing obj6% (6/37)        remote: Compresects:  1)        remote: Compressing obj1% (8/37 remote: Compressing objects:  24% (9/3)       : Compressing objects:  27% (10/37)        remotessing objects:  29% (11/37 remote: Comprbjects:  32% (12/37)       : Compressing o 35% (13/37)        remotessing objects: /37)        remote: Comprejects:  40% (15    remote: Compressing ob43% (16/37)    ote: Compressing objects:  45% 37)        rempressing objects:  48% (18/37)        remote: Com objects:  51% (19/37) remote: Compressing:  54% (20/37)        Compressing objects21/37)        remote: ing objects:  59% (      remote: Compresscts:  62% (23/37)  emote: Compressing obje% (24/37)        rompressing objects:  67% )        remote: Cng objects:  70% (26/37)        remote: Compressits:  72% (27/37)     te: Compressing objec (28/37)        remoressing objects:  78%        remote: Compobjects:  81% (30/37)remote: Compressing   83% (31/37)         Compressing objects:2/37)        remote:sing objects:  89% (3     remote: Compresects:  91% (34/37)        remote: Compressing obj4% (35/37)        remote: Compressing objects:  97)        rempressing objects: 100% (37/3  remote: Cog objects: 100% (37/37), done 
Receiving objects:   0% (1/154)Receiving objects:   2% (4/154)                                                                                                                                                    Receiving o                       Receiving objects:   7% (11/154)                                                                                           10% (16/154)                                                                 ng objects:                Receiving objects:  12% (19/15    Receiving objects:  14% (22/154)                              54)                                                                                Receiving objects:  16% (25/1                                                                           Receiving objects:  19%                                                    2% (34/154)                                                                                Rece                              Receiving objects:  24% (37/154)                                   Receiving objects:  26% (41/154)               cts:  27% (42/154)                                                                                                                                                 Receiving objects:  31% (48/154)                         (50/154)  eceiving objects:  34% (53/154)                                                                                                                   Receiving objects:  36% (56/154)                                   Receiving objects:  38% (59/154)Receiving object                                                                                                                                          Receiving objects:  43% (67/154)           objects:  44% (68/154)                                          ing objects:  46% (71/154)                                                                                               Receiving objects:  48% (7        Receiving objects:                Receiving objects:  51% (79/154)                                                                                                                                                                                         Receiving objects:  55% (eceiving objects:  56% (87/154)             jects:  58% (90/154)                                                                                                                   Receiving ob                      Rece                              Receiving objects:  63% (98/154)                                                                                                                                                        Receiving ob                       Receiving objects:  68% (105/154)                   :  70% (108/154)remote: Total 154 (d
Receiving objects:  71% (110/154)Receiving objects:  73% (113/154)                                                                                                                                                        Receivi                            Receiving objects:  78% (121/154)                                                                                        ts:  81% (125/154)                                                            ng objec                    Receiving objects:  83% (128/154)Receiving objects:  85% (131/154)                         (133/154)                                                                                Receiving objects:  87%                                                                                    Receiving objects:  90%                        4)                            4/154)                                                                                                                    Receiving objects:  95% (147/154)                                    Receiving objects:  97% (150/154)    eiving objects:  98% (151/154)                                                                    Rec277.00 KiB/s, done.
Resolving deltas:   0% (0/93)Resolving deltas:   7% (7/93)                                                                                                                                                 Resolving delt                  Resolving deltas:  15% (14/93)                                                                                              93)                                                                          eltas:  35% (33/     Resolving deltas:  37% (35/93   Resolving deltas:  40% (38/93)                                                                                                                 Resolving deltas:  49% (46/93                                    Resolvin                        Resolving deltas:  64% (60/93)                                                    (68/93)                                                                                Resolving deltas:  75%          Resolving delta                 Resolving deltas:  81% (76/93)                                                                                                                 Resolving delta                                                  Res                             Resol)                                                      1% (85/93)                                                                                Resolving deltas:               Resolving deltas:  94% (88/93)                                 Resolving deltas:  96% (90/93)                                                                                                                                      
From https://github.com/input-output-hk/cardano-wallet
 * branch                23c314a0bf3849fd52ca443a5127313c646b4904 -> FETCH_HEAD
[90m$[0m git checkout -f 23c314a0bf3849fd52ca443a5127313c646b4904
Warning: you are leaving 2 commits behind, not connected to
any of your branches:

  a732edfd6 Try removing heap profiling
  a953fa671 Revert "Lower node logging severity to Notice in bench"

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> a732edfd6

HEAD is now at 23c314a0b Merge #1582
[90m$[0m git submodule sync --recursive
[90m$[0m git submodule update --init --recursive --force
[90m$[0m git submodule foreach --recursive git reset --hard
[90m$[0m git clean -ffdqx
[90m$[0m git submodule foreach --recursive git clean -ffdqx
~~~ Running global pre-command hook
[90m$[0m /nix/store/i42glba5vjzdsyfgicji807k4blchykk-buildkite-agent-hooks/pre-command
~~~ Running command
[90m$[0m ././.buildkite/bench-latency.sh
--- Build
trace: Using IOHK default nixpkgs
trace: [alex-plan-to-nix-pkgs] cabal new-configure --with-ghc=ghc --with-ghc-pkg=ghc-pkg
trace: [happy-plan-to-nix-pkgs] cabal new-configure --with-ghc=ghc --with-ghc-pkg=ghc-pkg
trace: [hscolour-plan-to-nix-pkgs] cabal new-configure --with-ghc=ghc --with-ghc-pkg=ghc-pkg
these paths will be fetched (4.25 MiB download, 28.84 MiB unpacked):
  /nix/store/2h4iqfa63y66826rm906jqwzgb15yxsa-cardano-wallet-jormungandr-2020.4.7-bench-latency
copying path '/nix/store/2h4iqfa63y66826rm906jqwzgb15yxsa-cardano-wallet-jormungandr-2020.4.7-bench-latency' from 'https://hydra.iohk.io'...
/nix/store/2h4iqfa63y66826rm906jqwzgb15yxsa-cardano-wallet-jormungandr-2020.4.7-bench-latency
trace: Using IOHK default nixpkgs
trace: [alex-plan-to-nix-pkgs] cabal new-configure --with-ghc=ghc --with-ghc-pkg=ghc-pkg
trace: [happy-plan-to-nix-pkgs] cabal new-configure --with-ghc=ghc --with-ghc-pkg=ghc-pkg
trace: [hscolour-plan-to-nix-pkgs] cabal new-configure --with-ghc=ghc --with-ghc-pkg=ghc-pkg
trace: Using IOHK default nixpkgs
trace: gitSource.nix: /nix/store/bsxg3s82zwjidjnnfx7hpf1yzq3zhh2z-source does not seem to be a git repository,
assuming it is a clean checkout.
trace: WARNING: `cleanGit` called on /nix/store/bsxg3s82zwjidjnnfx7hpf1yzq3zhh2z-source without a `name`. Consider adding `name = "bsxg3s82zwjidjnnfx7hpf1yzq3zhh2z-source;"`
trace: Using index-state: 2020-04-01T00:00:00Z for source
trace: Using IOHK default nixpkgs
trace: WARNING: license "GPL-2.0-or-later" not found
/nix/store/58nn9lhssc2xh8lv914pc5yhqjag79fr-cardano-wallet-byron-2020.4.7-bench-latency
+++ Run benchmark - byron


Random wallets
    Non-cached run
        getNetworkInfo      - 1.4 ms
    Latencies for 2 fixture wallets scenario
        listWallets         - 1.4 ms
        getWallet           - 0.7 ms
        getUTxOsStatistics  - 0.7 ms
        listAddresses       - 1.1 ms
        listTransactions    - 1.2 ms
        postTransactionFee  - 0.8 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 10 fixture wallets scenario
        listWallets         - 7.2 ms
        getWallet           - 0.6 ms
        getUTxOsStatistics  - 0.7 ms
        listAddresses       - 1.0 ms
        listTransactions    - 1.0 ms
        postTransactionFee  - 0.8 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 100 fixture wallets scenario
        listWallets         - 106.6 ms
        getWallet           - 0.7 ms
        getUTxOsStatistics  - 0.7 ms
        listAddresses       - 1.1 ms
        listTransactions    - 1.2 ms
        postTransactionFee  - 0.8 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 2 fixture wallets with 10 txs scenario
        listWallets         - 1.7 ms
        getWallet           - 0.8 ms
        getUTxOsStatistics  - 0.9 ms
        listAddresses       - 1.9 ms
        listTransactions    - 2.6 ms
        postTransactionFee  - 1.0 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 2 fixture wallets with 20 txs scenario
        listWallets         - 1.7 ms
        getWallet           - 0.9 ms
        getUTxOsStatistics  - 0.9 ms
        listAddresses       - 2.3 ms
        listTransactions    - 3.1 ms
        postTransactionFee  - 1.1 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 2 fixture wallets with 100 txs scenario
        listWallets         - 2.3 ms
        getWallet           - 1.5 ms
        getUTxOsStatistics  - 1.6 ms
        listAddresses       - 7.6 ms
        listTransactions    - 12.2 ms
        postTransactionFee  - 1.9 ms
        getNetworkInfo      - 0.1 ms
    Latencies for 10 fixture wallets with 10 txs scenario
        listWallets         - 6.7 ms
        getWallet           - 0.8 ms
        getUTxOsStatistics  - 0.8 ms
        listAddresses       - 1.7 ms
        listTransactions    - 2.5 ms
        postTransactionFee  - 0.9 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 10 fixture wallets with 20 txs scenario
        listWallets         - 7.1 ms
        getWallet           - 0.9 ms
        getUTxOsStatistics  - 0.9 ms
        listAddresses       - 2.5 ms
        listTransactions    - 3.7 ms
        postTransactionFee  - 1.1 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 10 fixture wallets with 100 txs scenario
        listWallets         - 8.5 ms
        getWallet           - 1.9 ms
        getUTxOsStatistics  - 1.7 ms
        listAddresses       - 7.9 ms
        listTransactions    - 13.1 ms
        postTransactionFee  - 2.2 ms
        getNetworkInfo      - 0.1 ms
    Latencies for 2 fixture wallets with 100 utxos scenario
        listWallets         - 2.9 ms
        getWallet           - 1.5 ms
        getUTxOsStatistics  - 1.4 ms
        listAddresses       - 4.9 ms
        listTransactions    - 10.4 ms
        postTransactionFee  - 5.7 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 2 fixture wallets with 200 utxos scenario
        listWallets         - 3.8 ms
        getWallet           - 2.3 ms
        getUTxOsStatistics  - 2.2 ms
        listAddresses       - 9.1 ms
        listTransactions    - 19.6 ms
        postTransactionFee  - 13.0 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 2 fixture wallets with 500 utxos scenario
        listWallets         - 7.5 ms
        getWallet           - 6.3 ms
        getUTxOsStatistics  - 5.3 ms
        listAddresses       - 22.1 ms
        listTransactions    - 55.0 ms
        postTransactionFee  - 61.2 ms
        getNetworkInfo      - 0.1 ms
    Latencies for 2 fixture wallets with 1000 utxos scenario
        listWallets         - 11.8 ms
        getWallet           - 8.9 ms
        getUTxOsStatistics  - 9.3 ms
        listAddresses       - 45.3 ms
        listTransactions    - 120.7 ms
        postTransactionFee  - 226.5 ms
        getNetworkInfo      - 0.1 ms


Icarus wallets
    Non-cached run
        getNetworkInfo      - 1.3 ms
    Latencies for 2 fixture wallets scenario
        listWallets         - 2.3 ms
        getWallet           - 1.3 ms
        getUTxOsStatistics  - 1.2 ms
        listAddresses       - 16.0 ms
        listTransactions    - 1.6 ms
        postTransactionFee  - 1.6 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 10 fixture wallets scenario
        listWallets         - 12.1 ms
        getWallet           - 1.6 ms
        getUTxOsStatistics  - 1.6 ms
        listAddresses       - 16.0 ms
        listTransactions    - 2.0 ms
        postTransactionFee  - 1.6 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 100 fixture wallets scenario
        listWallets         - 216.2 ms
        getWallet           - 6.5 ms
        getUTxOsStatistics  - 7.0 ms
        listAddresses       - 22.7 ms
        listTransactions    - 6.8 ms
        postTransactionFee  - 10.4 ms
        getNetworkInfo      - 0.1 ms
    Latencies for 2 fixture wallets with 10 txs scenario
        listWallets         - 2.6 ms
        getWallet           - 1.4 ms
        getUTxOsStatistics  - 1.4 ms
        listAddresses       - 14.0 ms
        listTransactions    - 2.8 ms
        postTransactionFee  - 1.5 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 2 fixture wallets with 20 txs scenario
        listWallets         - 2.7 ms
        getWallet           - 1.6 ms
        getUTxOsStatistics  - 1.7 ms
        listAddresses       - 19.5 ms
        listTransactions    - 3.7 ms
        postTransactionFee  - 1.7 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 2 fixture wallets with 100 txs scenario
        listWallets         - 3.5 ms
        getWallet           - 2.3 ms
        getUTxOsStatistics  - 2.5 ms
        listAddresses       - 19.3 ms
        listTransactions    - 12.7 ms
        postTransactionFee  - 2.9 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 10 fixture wallets with 10 txs scenario
        listWallets         - 12.5 ms
        getWallet           - 1.8 ms
        getUTxOsStatistics  - 1.8 ms
        listAddresses       - 14.4 ms
        listTransactions    - 3.1 ms
        postTransactionFee  - 1.9 ms
        getNetworkInfo      - 0.1 ms
    Latencies for 10 fixture wallets with 20 txs scenario
        listWallets         - 13.7 ms
        getWallet           - 2.2 ms
        getUTxOsStatistics  - 2.2 ms
        listAddresses       - 15.3 ms
        listTransactions    - 4.5 ms
        postTransactionFee  - 2.4 ms
        getNetworkInfo      - 0.1 ms
    Latencies for 10 fixture wallets with 100 txs scenario
        listWallets         - 15.0 ms
        getWallet           - 3.1 ms
        getUTxOsStatistics  - 3.0 ms
        listAddresses       - 20.2 ms
        listTransactions    - 13.5 ms
        postTransactionFee  - 8.0 ms
        getNetworkInfo      - 0.1 ms
    Latencies for 2 fixture wallets with 100 utxos scenario
        listWallets         - 4.9 ms
        getWallet           - 2.4 ms
        getUTxOsStatistics  - 2.3 ms
        listAddresses       - 7.4 ms
        listTransactions    - 8.5 ms
        postTransactionFee  - 7.6 ms
        getNetworkInfo      - 0.1 ms
    Latencies for 2 fixture wallets with 200 utxos scenario
        listWallets         - 5.4 ms
        getWallet           - 3.1 ms
        getUTxOsStatistics  - 2.9 ms
        listAddresses       - 11.1 ms
        listTransactions    - 15.6 ms
        postTransactionFee  - 14.6 ms
        getNetworkInfo      - 0.0 ms
    Latencies for 2 fixture wallets with 500 utxos scenario
        listWallets         - 8.5 ms
        getWallet           - 6.2 ms
        getUTxOsStatistics  - 5.7 ms
        listAddresses       - 20.4 ms
        listTransactions    - 39.4 ms
        postTransactionFee  - 71.8 ms
        getNetworkInfo      - 0.1 ms
    Latencies for 2 fixture wallets with 1000 utxos scenario
        listWallets         - 14.0 ms
        getWallet           - 14.7 ms
        getUTxOsStatistics  - 9.8 ms
        listAddresses       - 38.1 ms
        listTransactions    - 83.5 ms
        postTransactionFee  - 242.7 ms
        getNetworkInfo      - 0.0 ms
+++ Run benchmark - jormungandr
Non-cached run
   getNetworkInfo      - 1.1 ms
Latencies for 2 fixture wallets scenario
   listWallets         - 13.4 ms
   getWallet           - 6.3 ms
   getUTxOsStatistics  - 1.1 ms
   listAddresses       - 4.4 ms
   listTransactions    - 1.7 ms
   postTransactionFee  - 1.6 ms
   listStakePools      - 0.3 ms
   getNetworkInfo      - 0.2 ms
Latencies for 10 fixture wallets scenario
   listWallets         - 66.2 ms
   getWallet           - 6.6 ms
   getUTxOsStatistics  - 1.2 ms
   listAddresses       - 4.3 ms
   listTransactions    - 1.6 ms
   postTransactionFee  - 1.7 ms
   listStakePools      - 408.6 ms
   getNetworkInfo      - 0.9 ms
Latencies for 100 fixture wallets scenario
   listWallets         - 972.3 ms
   getWallet           - 6.6 ms
   getUTxOsStatistics  - 1.3 ms
   listAddresses       - 4.2 ms
   listTransactions    - 1.9 ms
   postTransactionFee  - 2.2 ms
   listStakePools      - 460.3 ms
   getNetworkInfo      - 2.2 ms
Latencies for 2 fixture wallets with 10 txs scenario
   listWallets         - 14.1 ms
   getWallet           - 7.0 ms
   getUTxOsStatistics  - 1.4 ms
   listAddresses       - 4.7 ms
   listTransactions    - 2.8 ms
   postTransactionFee  - 1.5 ms
   listStakePools      - 196.3 ms
   getNetworkInfo      - 0.4 ms
Latencies for 2 fixture wallets with 20 txs scenario
   listWallets         - 14.4 ms
   getWallet           - 6.9 ms
   getUTxOsStatistics  - 1.4 ms
   listAddresses       - 5.0 ms
   listTransactions    - 4.9 ms
   postTransactionFee  - 1.6 ms
   listStakePools      - 171.4 ms
   getNetworkInfo      - 0.4 ms
Latencies for 2 fixture wallets with 100 txs scenario
   listWallets         - 14.7 ms
   getWallet           - 8.3 ms
   getUTxOsStatistics  - 2.1 ms
   listAddresses       - 8.7 ms
   listTransactions    - 13.0 ms
   postTransactionFee  - 2.3 ms
   listStakePools      - 302.6 ms
   getNetworkInfo      - 0.4 ms
Latencies for 10 fixture wallets with 10 txs scenario
   listWallets         - 70.4 ms
   getWallet           - 6.8 ms
   getUTxOsStatistics  - 1.4 ms
   listAddresses       - 4.7 ms
   listTransactions    - 2.8 ms
   postTransactionFee  - 1.5 ms
   listStakePools      - 196.8 ms
   getNetworkInfo      - 0.5 ms
Latencies for 10 fixture wallets with 20 txs scenario
   listWallets         - 65.2 ms
   getWallet           - 6.9 ms
   getUTxOsStatistics  - 1.4 ms
   listAddresses       - 5.1 ms
   listTransactions    - 3.8 ms
   postTransactionFee  - 1.5 ms
   listStakePools      - 268.1 ms
   getNetworkInfo      - 0.4 ms
Latencies for 10 fixture wallets with 100 txs scenario
   listWallets         - 68.9 ms
   getWallet           - 10.1 ms
   getUTxOsStatistics  - 2.1 ms
   listAddresses       - 8.9 ms
   listTransactions    - 13.7 ms
   postTransactionFee  - 2.5 ms
   listStakePools      - 447.6 ms
   getNetworkInfo      - 0.6 ms
Latencies for 2 fixture wallets with 100 utxos scenario
   listWallets         - 14.9 ms
   getWallet           - 8.3 ms
   getUTxOsStatistics  - 2.0 ms
   listAddresses       - 6.8 ms
   listTransactions    - 10.8 ms
   postTransactionFee  - 2.4 ms
   listStakePools      - 345.8 ms
   getNetworkInfo      - 0.3 ms
Latencies for 2 fixture wallets with 200 utxos scenario
   listWallets         - 19.5 ms
   getWallet           - 9.8 ms
   getUTxOsStatistics  - 2.8 ms
   listAddresses       - 10.1 ms
   listTransactions    - 19.9 ms
   postTransactionFee  - 4.4 ms
   listStakePools      - 351.9 ms
   getNetworkInfo      - 0.4 ms
Latencies for 2 fixture wallets with 500 utxos scenario
   listWallets         - 23.5 ms
   getWallet           - 15.3 ms
   getUTxOsStatistics  - 5.6 ms
   listAddresses       - 20.5 ms
   listTransactions    - 43.6 ms
   postTransactionFee  - 7.1 ms
   listStakePools      - 356.4 ms
   getNetworkInfo      - 0.4 ms
Latencies for 2 fixture wallets with 1000 utxos scenario
   listWallets         - 33.6 ms
   getWallet           - 27.0 ms
   getUTxOsStatistics  - 10.5 ms
   listAddresses       - 36.6 ms
   listTransactions    - 98.3 ms
   postTransactionFee  - 12.8 ms
   listStakePools      - 424.1 ms
   getNetworkInfo      - 0.5 ms
~~~ Running global pre-exit hook
[90m$[0m /nix/store/i42glba5vjzdsyfgicji807k4blchykk-buildkite-agent-hooks/pre-exit
